// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/InfoToast shoul match snapshot with icon 1`] = `
<CSSTransition
  appear={true}
  classNames="slide"
  in={true}
  mountOnEnter={true}
  timeout={300}
  unmountOnExit={true}
>
  <div
    className="info-toast"
  >
    <div>
      icon
      <span>
        A message
      </span>
    </div>
    <ForwardRef
      className="info-toast__icon_button"
      icon="close"
      inverted={true}
      onClick={[Function]}
      size="sm"
    />
  </div>
</CSSTransition>
`;

exports[`components/InfoToast should match snapshot 1`] = `
<CSSTransition
  appear={true}
  classNames="slide"
  in={true}
  mountOnEnter={true}
  timeout={300}
  unmountOnExit={true}
>
  <div
    className="info-toast"
  >
    <div>
      <span>
        A message
      </span>
    </div>
    <ForwardRef
      className="info-toast__icon_button"
      icon="close"
      inverted={true}
      onClick={[Function]}
      size="sm"
    />
  </div>
</CSSTransition>
`;

exports[`components/InfoToast should match snapshot with className 1`] = `
<CSSTransition
  appear={true}
  classNames="slide"
  in={true}
  mountOnEnter={true}
  timeout={300}
  unmountOnExit={true}
>
  <div
    className="info-toast className"
  >
    <div>
      <span>
        A message
      </span>
    </div>
    <ForwardRef
      className="info-toast__icon_button"
      icon="close"
      inverted={true}
      onClick={[Function]}
      size="sm"
    />
  </div>
</CSSTransition>
`;

exports[`components/InfoToast should match snapshot with icon 1`] = `
<CSSTransition
  appear={true}
  classNames="slide"
  in={true}
  mountOnEnter={true}
  timeout={300}
  unmountOnExit={true}
>
  <div
    className="info-toast"
  >
    <div>
      <CheckIcon />
      <span>
        A message
      </span>
    </div>
    <ForwardRef
      className="info-toast__icon_button"
      icon="close"
      inverted={true}
      onClick={[Function]}
      size="sm"
    />
  </div>
</CSSTransition>
`;

exports[`components/InfoToast should match snapshot with undo 1`] = `
<CSSTransition
  appear={true}
  classNames="slide"
  in={true}
  mountOnEnter={true}
  timeout={300}
  unmountOnExit={true}
>
  <div
    className="info-toast"
  >
    <div>
      <span>
        A message
      </span>
      <button
        className="info-toast__undo"
        onClick={[Function]}
      >
        Undo
      </button>
    </div>
    <ForwardRef
      className="info-toast__icon_button"
      icon="close"
      inverted={true}
      onClick={[Function]}
      size="sm"
    />
  </div>
</CSSTransition>
`;
